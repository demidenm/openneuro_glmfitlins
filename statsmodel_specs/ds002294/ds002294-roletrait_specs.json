{
  "Name": "ds002294",
  "BIDSModelVersion": "1.0.0",
  "Input": {
    "subject": [
      "002",
      "004",
      "005",
      "007",
      "008",
      "009",
      "010",
      "012",
      "013",
      "014",
      "015",
      "016",
      "017",
      "018",
      "019",
      "020",
      "021",
      "022",
      "023",
      "024",
      "027",
      "028",
      "029",
      "030",
      "031",
      "032",
      "034",
      "035",
      "036",
      "037",
      "039",
      "040",
      "041",
      "042",
      "043",
      "045",
      "046",
      "048",
      "049",
      "050"
    ],
    "task": [
      "roletrait"
    ],
    "run": [
      1,
      2,
      3,
      4
    ]
  },
  "Nodes": [
    {
      "Level": "Run",
      "Name": "run_level",
      "GroupBy": [
        "run",
        "subject"
      ],
      "Transformations": {
        "Transformer": "pybids-transforms-v1",
        "Instructions": [
          {
            "Name": "Factor",
            "Input": [
              "trial_type"
            ]
          },
          {
            "Name": "Convolve",
            "Model": "spm",
            "Derivative": false,
            "Dispersion": false,
            "Input": [
              "trial_type.*"
            ]
          }
        ]
      },
      "Model": {
        "X": [
          1,
          "trial_type.*",
          "trans_*",
          "rot_*",
          "cosine*"
        ],
        "Type": "glm"
      },
      "Contrasts": [
        {
          "Name": "traitselfvfriend",
          "ConditionList": [
            "trial_type.selfTraitBlock",
            "trial_type.friendTraitBlock"
          ],
          "Weights": [
            1,
            -1
          ],
          "Test": "t"
        },
        {
          "Name": "roleselfvfriend",
          "ConditionList": [
            "trial_type.selfRoleBlock",
            "trial_type.friendRoleBlock"
          ],
          "Weights": [
            1,
            -1
          ],
          "Test": "t"
        },
        {
          "Name": "groupselfvfriend",
          "ConditionList": [
            "trial_type.selfGroupBlock",
            "trial_type.friendGroupBlock"
          ],
          "Weights": [
            1,
            -1
          ],
          "Test": "t"
        },
        {
          "Name": "traitvrole",
          "ConditionList": [
            "trial_type.selfTraitBlock",
            "trial_type.friendTraitBlock",
            "trial_type.selfRoleBlock",
            "trial_type.friendRoleBlock"
          ],
          "Weights": [
            0.5,
            0.5,
            -0.5,
            -0.5
          ],
          "Test": "t"
        },
        {
          "Name": "socialevalvgroupattend",
          "ConditionList": [
            "trial_type.selfTraitBlock",
            "trial_type.friendTraitBlock",
            "trial_type.selfRoleBlock",
            "trial_type.friendRoleBlock",
            "trial_type.selfGroupBlock",
            "trial_type.friendGroupBlock"
          ],
          "Weights": [
            0.25,
            0.25,
            0.25,
            0.25,
            -0.5,
            -0.5
          ],
          "Test": "t"
        },
        {
          "Name": "selftraitvbase",
          "ConditionList": [
            "trial_type.selfTraitBlock"
          ],
          "Weights": [
            1
          ],
          "Test": "t"
        },
        {
          "Name": "friendtraitvbase",
          "ConditionList": [
            "trial_type.friendTraitBlock"
          ],
          "Weights": [
            1
          ],
          "Test": "t"
        },
        {
          "Name": "selfrolevbase",
          "ConditionList": [
            "trial_type.selfRoleBlock"
          ],
          "Weights": [
            1
          ],
          "Test": "t"
        },
        {
          "Name": "friendrolevbase",
          "ConditionList": [
            "trial_type.friendRoleBlock"
          ],
          "Weights": [
            1
          ],
          "Test": "t"
        },
        {
          "Name": "selfgroupvbase",
          "ConditionList": [
            "trial_type.selfGroupBlock"
          ],
          "Weights": [
            1
          ],
          "Test": "t"
        },
        {
          "Name": "friendgroupvbase",
          "ConditionList": [
            "trial_type.friendGroupBlock"
          ],
          "Weights": [
            1
          ],
          "Test": "t"
        },
        {
          "Name": "allselfvfriend",
          "ConditionList": [
            "trial_type.selfTraitBlock",
            "trial_type.selfRoleBlock",
            "trial_type.selfGroupBlock",
            "trial_type.friendTraitBlock",
            "trial_type.friendRoleBlock",
            "trial_type.friendGroupBlock"
          ],
          "Weights": [
            0.33,
            0.33,
            0.33,
            -0.33,
            -0.33,
            -0.33
          ],
          "Test": "t"
        },
        {
          "Name": "groupbias",
          "ConditionList": [
            "trial_type.selfGroupBlock",
            "trial_type.friendGroupBlock"
          ],
          "Weights": [
            1,
            -1
          ],
          "Test": "t"
        },
        {
          "Name": "allconditions",
          "ConditionList": [
            "trial_type.selfTraitBlock",
            "trial_type.friendTraitBlock",
            "trial_type.selfRoleBlock",
            "trial_type.friendRoleBlock",
            "trial_type.selfGroupBlock",
            "trial_type.friendGroupBlock"
          ],
          "Weights": [
            0.167,
            0.167,
            0.167,
            0.167,
            0.167,
            0.167
          ],
          "Test": "t"
        }
      ]
    },
    {
      "Level": "Subject",
      "Name": "subject_level",
      "GroupBy": [
        "subject",
        "contrast"
      ],
      "Model": {
        "X": [
          1
        ],
        "Type": "glm"
      },
      "DummyContrasts": {
        "Test": "t"
      }
    },
    {
      "Level": "Dataset",
      "Name": "data_level",
      "GroupBy": [
        "contrast"
      ],
      "Model": {
        "X": [
          1
        ],
        "Type": "glm"
      },
      "DummyContrasts": {
        "Test": "t"
      }
    }
  ]
}